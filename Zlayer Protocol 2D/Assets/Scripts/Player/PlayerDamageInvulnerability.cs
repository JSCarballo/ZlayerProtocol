using System.Collections;
using UnityEngine;

/// Invulnerabilidad + parpadeo para el Player (usa PlayerHealth).
[RequireComponent(typeof(PlayerHealth))]
public class PlayerDamageInvulnerability : MonoBehaviour
{
    [Header("Invulnerabilidad")]
    [SerializeField] private float invulnSeconds = 1f;

    [Header("Blink visual")]
    [SerializeField] private SpriteBlinker2D blinker;

    private PlayerHealth health;
    private bool invulnActive;
    private Coroutine invCR;

    void Awake()
    {
        health = GetComponent<PlayerHealth>();
        if (!blinker) blinker = GetComponentInChildren<SpriteBlinker2D>(true);
    }

    void OnEnable()
    {
        if (health != null) health.OnDamaged += OnDamaged;
    }

    void OnDisable()
    {
        if (health != null) health.OnDamaged -= OnDamaged;
    }

    void OnDamaged(int amount)
    {
        if (invulnActive || health == null) return;
        invCR = StartCoroutine(InvulnRoutine());
    }

    IEnumerator InvulnRoutine()
    {
        invulnActive = true;

        health.StartInvulnerability(invulnSeconds);
        if (blinker) blinker.Play(invulnSeconds);

        yield return new WaitForSeconds(invulnSeconds);

        invulnActive = false;
        invCR = null;
    }
}
